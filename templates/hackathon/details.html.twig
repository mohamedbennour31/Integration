{% extends 'base.html.twig' %}

{% block title %}D√©tails du Hackathon{% endblock %}

{% block body %}
<section class="section">
<div class="container">
  <h1 class="mb-4">{{ hackathon.nom_hackathon }}</h1>
  <p><span class="icon">üìç</span><strong>Lieu :</strong> {{ hackathon.lieu }}</p>
  <p><span class="icon">üóìÔ∏è</span><strong>Date de d√©but :</strong> {{ hackathon.date_debut ? hackathon.date_debut|date('d/m/Y') : 'N/A' }}</p>
  <p><span class="icon">üóìÔ∏è</span><strong>Date de fin :</strong> {{ hackathon.date_fin ? hackathon.date_fin|date('d/m/Y') : 'N/A' }}</p>
  <p><span class="icon">üìù</span><strong>Description :</strong> {{ hackathon.description }}</p>
  
  <div>
  {% set now = "now"|date("U") %}
  {% set debut = hackathon.date_debut|date("U") %}

    <br>
    {% if hackathon.participations|length < hackathon.max_participants %}
      {% if app.user and 'ROLE_PARTICIPANT' in app.user.roles %}
        {% set isAlreadyParticipant = false %}
        {% for participation in participations %}
          {% if participation.hackathon.id_hackathon == hackathon.id_hackathon %}
            {% set isAlreadyParticipant = true %}
          {% endif %}
        {% endfor %}
        {% if not isAlreadyParticipant %}
          <a href="{{ path('hackathon_participer', { id: hackathon.id_hackathon }) }}" class="btn btn-primary">Participer</a>
        {% else %}
        <span class="badge bg-secondary">D√©j√† inscrit</span>
          <a href="{{ path('app_projets', { id: hackathon.id_hackathon }) }}" class="btn btn-primary">Soummettre le projet</a>
        {% endif %}
      {% endif %}
    {% else %}
      <span class="badge bg-danger">Complet</span>
    {% endif %}
  </div>
  <br>

  <div>
      {% if hackathon.id_organisateur.id == app.user.id %}
      {% if debut > now %}
        <a href="{{ path('modifier_hackathon', { id: hackathon.id_hackathon }) }}" class="btn btn-primary">Modifier</a>
        <form method="post" action="{{ path('supprimer_hackathon', {id: hackathon.id_hackathon}) }}" style="display:inline;" onsubmit="return confirm('Es-tu s√ªr(e) ?');">
          <input type="hidden" name="_token" value="{{ csrf_token('supprimer' ~ hackathon.id_hackathon) }}">
          <button class="btn btn-primary">Supprimer</button>
        </form>
        <a href="{{ path('voir_participants', { id: hackathon.id_hackathon}) }}" class="btn btn-secondary" >Voir les participants</a>
        <a href="{{ path('voir_projets', { id: hackathon.id_hackathon}) }}" class="btn btn-secondary">Voir les projets</a>
      {% endif %}
      {% endif %}

    
  </div>
  <br/>
  <div id="map" class="map-custom" style="height: 400px;"></div>

<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>
{% if coords %}
<script>
  document.addEventListener('DOMContentLoaded', function () {
    if (typeof L !== 'undefined') {
      const map = L.map('map').setView([{{ coords.lat }}, {{ coords.lon }}], 16);

      L.tileLayer('https://maps.geoapify.com/v1/tile/osm-carto/{z}/{x}/{y}.png?apiKey={{ geoapify_key }}', {
        maxZoom: 20,
      }).addTo(map);

      const hackathonIcon = L.icon({
  iconUrl: '/FrontOffice/assets/img/markers/hackathonMarker.png',
  iconSize: [36, 36],
  iconAnchor: [18, 36],
  popupAnchor: [0, -30]
});
const marker = L.marker([{{ coords.lat }}, {{ coords.lon }}], {icon: hackathonIcon}).addTo(map)
  .bindPopup("<b>Lieu du hackathon</b><br>{{ hackathon.lieu|e('js') }}").openPopup();

      // Contr√¥le personnalis√© pour recentrer
      const recenterControl = L.Control.extend({
        options: { position: 'topright' },
        onAdd: function(map) {
          const container = L.DomUtil.create('button', 'leaflet-control-custom');
          container.innerHTML = '<i class="bi bi-crosshair2"></i> Centrer';
          container.title = 'Recentrer sur le hackathon';
          container.onclick = function(){
            map.setView([{{ coords.lat }}, {{ coords.lon }}], 16);
            marker.openPopup();
          };
          return container;
        }
      });
      map.addControl(new recenterControl());

      // --- Ajout des POI proches (restaurants et h√¥tels) via Geoapify ---
      const poiIcons = {
  restaurant: L.icon({
    iconUrl: '/FrontOffice/assets/img/markers/restaurantMarker.png',
    iconSize: [36, 36],
    iconAnchor: [18, 36],
    popupAnchor: [0, -30]
  }),
  hotel: L.icon({
    iconUrl: '/FrontOffice/assets/img/markers/hotelMarker.png',
    iconSize: [36, 36],
    iconAnchor: [18, 36],
    popupAnchor: [0, -30]
  })
};
      fetch(`https://api.geoapify.com/v2/places?categories=catering.restaurant,accommodation.hotel&filter=circle:{{ coords.lon }},{{ coords.lat }},1000&bias=proximity:{{ coords.lon }},{{ coords.lat }}&limit=20&apiKey={{ geoapify_key }}`)
        .then(r => r.json())
        .then(data => {
          if (data.features && data.features.length > 0) {
            data.features.forEach(f => {
              const cat = f.properties.categories.includes('catering.restaurant') ? 'restaurant' : 'hotel';
              const icon = poiIcons[cat];
              const m = L.marker([f.geometry.coordinates[1], f.geometry.coordinates[0]], {icon: icon}).addTo(map);
              m.bindPopup(`<b>${cat === 'restaurant' ? 'Restaurant' : 'H√¥tel'}</b><br>${f.properties.name || 'Nom inconnu'}`);
            });
          }
        })
        .catch(err => console.error('Erreur POI Geoapify:', err));
      // --- Fin POI ---
    } else {
      console.error('Leaflet library is not loaded.');
    }
  });
</script>
<div style="margin-top:10px;">

<span style="display:inline-block;margin-right:20px;">
  <img src="{{ asset('FrontOffice/assets/img/markers/restaurantMarker.png') }}" style="width:22px;vertical-align:middle;"> Restaurant
</span>
<span style="display:inline-block;margin-right:20px;">
  <img src="{{ asset('FrontOffice/assets/img/markers/hotelMarker.png') }}" style="width:22px;vertical-align:middle;"> H√¥tel
</span>
</div>
{% endif %}
</div>

</section>


{% endblock %}


